# AWS CodeBuild buildspec to build the nginx alpine image
# By Jason Umiker (jason.umiker@gmail.com)
# This requires the following environment variables be set on the Project:
# AWS_DEFAULT_REGION (Supplied by CodeBuild)
# AWS_ACCOUNT_ID
# IMAGE_REPO_NAME
# IMAGE_TAG
# EGYPT_SERVICE_NAME
# SUDAN_SERVICE_NAME
version: 0.2
phases:
  pre_build:
    commands:
      - echo $BRANCH_NAME
      - if [  $BRANCH_NAME = "staging" ] && [ !  -f qcspec.yml ]; then echo "qcspec.yml not found " && aws codebuild stop-build --id ${CODEBUILD_BUILD_ID} ; fi
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - CODEBUILD_RESOLVED_SOURCE_VERSION="${CODEBUILD_RESOLVED_SOURCE_VERSION:-$IMAGE_TAG}"
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_URI="$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_URI .
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - echo Build stage successfully completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_URI
      - printf '[{"name":"%s","imageUri":"%s"}]' "$EGYPT_SERVICE_NAME" "$IMAGE_URI" > "$EGYPT_SERVICE_NAME"-images.json
      - printf '[{"name":"%s","imageUri":"%s"}]' "$SUDAN_SERVICE_NAME" "$IMAGE_URI" > "$SUDAN_SERVICE_NAME"-images.json
      - printf '[{"name":"%s","imageUri":"%s"}]' "$ETHIOPIA_SERVICE_NAME" "$IMAGE_URI" > "$ETHIOPIA_SERVICE_NAME"-images.json
artifacts:
  files:
    - $EGYPT_SERVICE_NAME-images.json
    - $SUDAN_SERVICE_NAME-images.json
    - $ETHIOPIA_SERVICE_NAME-images.json
